[1/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/max30102_test.c.obj
[2/9] Performing build step for 'bootloader'
[1/1] C:\Windows\system32\cmd.exe /C "cd /D E:\PCG-PPG-ECG_Code\PPG_sensor\build\bootloader\esp-idf\esptool_py && E:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe E:/Espressif/frameworks/esp-idf-v5.2.5/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 E:/PCG-PPG-ECG_Code/PPG_sensor/build/bootloader/bootloader.bin"
Bootloader binary size 0x68b0 bytes. 0x750 bytes (7%) free.
[3/9] No install step for 'bootloader'
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Completed 'bootloader'
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable PPG_sensor.elf
[8/9] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated E:/PCG-PPG-ECG_Code/PPG_sensor/build/PPG_sensor.bin
[9/9] C:\Windows\system32\cmd.exe /C "cd /D E:\PCG-PPG-ECG_Code\PPG_sensor\build\esp-idf\esptool_py && E:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe E:/Espressif/frameworks/esp-idf-v5.2.5/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/PCG-PPG-ECG_Code/PPG_sensor/build/partition_table/partition-table.bin E:/PCG-PPG-ECG_Code/PPG_sensor/build/PPG_sensor.bin"
PPG_sensor.bin binary size 0x31fb0 bytes. Smallest app partition is 0x100000 bytes. 0xce050 bytes (80%) free.
