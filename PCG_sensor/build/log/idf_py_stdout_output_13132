[1/11] Linking C static library esp-idf\wifi_provisioning\libwifi_provisioning.a
[2/11] Performing build step for 'bootloader'
[1/1] C:\Windows\system32\cmd.exe /C "cd /D E:\PCG-PPG-ECG_Code\PCG_sensor\build\bootloader\esp-idf\esptool_py && E:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe E:/Espressif/frameworks/esp-idf-v5.2.5/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 E:/PCG-PPG-ECG_Code/PCG_sensor/build/bootloader/bootloader.bin"
Bootloader binary size 0x68b0 bytes. 0x750 bytes (7%) free.
[3/11] No install step for 'bootloader'
[4/11] Completed 'bootloader'
[5/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/i2s_test.c.obj
[6/11] Linking C static library esp-idf\main\libmain.a
[7/11] Generating ld/sections.ld
[8/11] Building C object CMakeFiles/PCG_sensor.elf.dir/project_elf_src_esp32.c.obj
[9/11] Linking CXX executable PCG_sensor.elf
[10/11] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated E:/PCG-PPG-ECG_Code/PCG_sensor/build/PCG_sensor.bin
[11/11] C:\Windows\system32\cmd.exe /C "cd /D E:\PCG-PPG-ECG_Code\PCG_sensor\build\esp-idf\esptool_py && E:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe E:/Espressif/frameworks/esp-idf-v5.2.5/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/PCG-PPG-ECG_Code/PCG_sensor/build/partition_table/partition-table.bin E:/PCG-PPG-ECG_Code/PCG_sensor/build/PCG_sensor.bin"
PCG_sensor.bin binary size 0x31800 bytes. Smallest app partition is 0x100000 bytes. 0xce800 bytes (81%) free.
